<apex:component controller="Chatify.SOQLQueryFilter_Comp_Controller">

    <apex:attribute name="FilterResultReturnObject" type="Chatify.SOQLQueryFilterResult" assignTo="{!FilterResult}" description="This is the object that passes the WHERE string back." required="True"/>
    <apex:attribute name="ObjectToFilter1" type="SObject" assignTo="{!ObjectToFilter}" description="This is the object that will be described for filtering." required="True"/>
    <apex:attribute name="WhereClause1" type="String" assignTo="{!WhereClause}" description="This is the existing where clause" required="True"/>
    
     
    <apex:includeScript value="{!$Resource.Chatify__jquery}"/>
    <apex:includeScript value="{!$Resource.Chatify__jqueryblockUI}"/>    
    
    <apex:includeScript value="{!URLFOR($Resource.Chatify__jqueryUI, 'jqueryui.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Chatify__jqueryUI, 'start-jquery-ui.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Chatify__ChatifyResources, 'css/style.css')}"/>            

    <script type="text/javascript">
        j$ = jQuery.noConflict();

        // this is used to block the page while an ajax request is pending
        function BlockMe() {            
            j$.blockUI();                                       
        }

        // this unblocks the page when an ajax request completes
        function UnBlockMe() {          
            j$.unblockUI();                                     
        }       
        
        // this overrides the salesforce function and prevents any field from having inital focus
        function setFocusOnLoad() {}    
        
        // this is used to open the custom lookup window in a pop-up window instead of a new tab
        function openLookupWindow(URL) {
            LookupWindow = window.open(URL,'lookup','height=500,width=680,toolbar=no,status=no,directories=no,menubar=no,resizable=yes,scrollable=no',true);
            LookupWindow.focus();
        }
                                                                        
        // this function resolves an issue with the way that Jquery and
        // salesforce work with the : in the ID
        function esc(myid) {
            return '#' + myid.replace(/(:|\.)/g,'\\\\$1');
        }                           
    </script>
        
    <apex:outputPanel id="QueryFilterPanel">
        <apex:actionRegion >        
            <apex:repeat value="{!SOQLQueryFilterDataList}" var="QueryData">
        
    
                    <apex:selectList value="{!QueryData.FieldName}" size="1" id="FieldName" styleClass="lineItem lineItem-field">
                        <apex:selectOptions value="{!FieldsSelectOptionList}" />
                        <!--
                        <apex:actionSupport event="onchange" action="{!BuildQueryString}" rerender="QueryFilterPanel,FilterLogic" onsubmit="BlockMe();" onComplete="UnBlockMe();" />
                        -->
                        <apex:actionSupport event="onchange" action="{!BuildQueryString}" rerender="QueryFilterPanel,FilterLogic"  onsubmit="BlockMe();" onComplete="UnBlockMe();" />
                    </apex:selectList>
                                                            
                    &nbsp;
                    
                    <apex:selectList value="{!QueryData.Operator}" size="1" id="Operator" styleClass="lineItem lineItem-operator ">
                        <apex:selectOptions value="{!QueryData.OperatorList}" />
                        <apex:actionSupport event="onchange" action="{!BuildQueryString}" rerender="QueryFilterPanel,FilterLogic" onsubmit="BlockMe();" onComplete="UnBlockMe();" />
                    </apex:selectList>
                    
                    &nbsp;
                    <!-- String input  -->            
                    <apex:inputText id="InputValue" value="{!QueryData.Value}" styleClass="lineItem" rendered="{!QueryData.RenderTextInputIcon}" >                                               
                            <apex:actionSupport event="onchange" action="{!BuildQueryString}" rerender="QueryFilterPanel,FilterLogic" onsubmit="BlockMe();" onComplete="UnBlockMe();" />
                        <!--  -->                        
                    </apex:inputText>
                     
                     <!-- Lookup Picker deprecated          
                    <apex:outputPanel id="CustomLookupWindow" rendered="{!QueryData.RenderLookupIcon}" styleClass="lineItem">
                        &nbsp;

                        <img title="Lookup (New Window)" onclick="openLookupWindow('apex/CustomLookupWindow?object={!CurrentObjectName}&field={!QueryData.FieldNameUTF8}&input={!URLENCODE($Component.InputValue)}')" onmouseover="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onblur="this.className = 'lookupIcon';" class="lookupIcon" alt="Lookup (New Window)" src="/s.gif" />
                    
                    </apex:outputPanel>
                    -->
                    
                    <!-- Date Picker -->
                    <apex:outputPanel id="DatePickerWindow" rendered="{!QueryData.RenderDatePickerIcon}" styleClass="lineItem">
                        <script>                                                                    
                             j$(function() {                
                                j$(esc('{!$Component.InputValue}')).datepicker({});
                             });                             
                        </script>
                    </apex:outputPanel>
                    
					<!-- Boolean Picker -->
					<apex:selectList value="{!QueryData.Value}" size="1" id="booleanPicker"  styleClass="lineItem" rendered="{!QueryData.RenderBoooleanPickerIcon}" >
                            <apex:selectOptions value="{!QueryData.BoolList}" />
                            <apex:actionSupport event="onchange" action="{!BuildQueryString}" rerender="QueryFilterPanel,FilterLogic" onsubmit="BlockMe();" onComplete="UnBlockMe();" />
                     </apex:selectList>
                     
                     <!-- PickList -->
                     <apex:selectList value="{!QueryData.Value}" size="1" id="pickPicker"  styleClass="lineItem" rendered="{!QueryData.RenderPickListInputIcon}" >
                            <apex:selectOptions value="{!QueryData.PickList}" />
                            <apex:actionSupport event="onchange" action="{!BuildQueryString}" rerender="QueryFilterPanel,FilterLogic" onsubmit="BlockMe();" onComplete="UnBlockMe();" />
                     </apex:selectList>

                     <!-- Time Picker -->   
                    <apex:outputPanel id="DateTimePickerWindow" rendered="{!QueryData.RenderDateTimePickerIcon}" styleClass="lineItem">

                        <apex:selectList value="{!QueryData.Hour}" size="1" id="Hour" style="width: 47px;" styleClass="lineItem">
                            <apex:selectOptions value="{!QueryData.HourList}" />
                            <apex:actionSupport event="onchange" action="{!BuildQueryString}" rerender="QueryFilterPanel,FilterLogic" onsubmit="BlockMe();" onComplete="UnBlockMe();" />
                        </apex:selectList>
                        
                        &nbsp;

                        <apex:selectList value="{!QueryData.Minute}" size="1" id="Minute" style="width: 47px;" styleClass="lineItem">
                            <apex:selectOptions value="{!QueryData.MinuteList}" />
                            <apex:actionSupport event="onchange" action="{!BuildQueryString}" rerender="QueryFilterPanel,FilterLogic" onsubmit="BlockMe();" onComplete="UnBlockMe();" />
                        </apex:selectList>
                        
                        &nbsp;

                        <apex:selectList value="{!QueryData.AMPM}" size="1" id="AMPM" style="width: 47px;" styleClass="lineItem">
                            <apex:selectOptions value="{!QueryData.AMPMList}" />
                            <apex:actionSupport event="onchange" action="{!BuildQueryString}" rerender="QueryFilterPanel,FilterLogic" onsubmit="BlockMe();" onComplete="UnBlockMe();" />
                        </apex:selectList>
                        
                        &nbsp;
                        
                    </apex:outputPanel>
                    <br/>
                    <!--                 
                    WhereConditionString : {!FilterResult.WhereConditionString}
                    
                    <br/>CurrentFieldType: {!QueryData.CurrentFieldType}
                        -->                         
            </apex:repeat>
        </apex:actionRegion>
        
        <br/>

        <apex:commandButton value="Add Row" action="{!AddQueryFilterDataRow}" reRender="QueryFilterPanel" onClick="BlockMe();" onComplete="UnBlockMe();"/>
        <apex:commandButton value="Remove Row" action="{!RemoveQueryFilterDataRow}" reRender="QueryFilterPanel" onClick="BlockMe();" onComplete="UnBlockMe();"/>        
        <br/>
        
        <br/> <br/>     
    </apex:outputPanel>
    
    <!--
    <apex:outputPanel id="FilterLogic">
        <apex:commandLink action="{!ToggleAdvancedFilter}" immediate="True" value="Add Filter Logic..." reRender="FilterLogic" rendered="{!NOT(AdvancedFilterEnabled)}" onClick="BlockMe();" onComplete="UnBlockMe();"/>
        <apex:commandLink action="{!ToggleAdvancedFilter}" immediate="True" value="Clear Filter Logic" reRender="FilterLogic" rendered="{!AdvancedFilterEnabled}" onClick="BlockMe();" onComplete="UnBlockMe();"/>
        <br/>
        <apex:outputPanel id="AdvancedFilterCondition" rendered="{!AdvancedFilterEnabled}">
            Filter Logic:<br/>
            <apex:inputText value="{!AdvancedFilterCondition}" size="74">
                <apex:actionSupport event="onchange" action="{!BuildQueryString}" rerender="FilterLogic" onsubmit="BlockMe();" onComplete="UnBlockMe();" />             
            </apex:inputText>
            <br/>
            <apex:outputPanel id="AdvancedFilterConditionError" style="color: #D74C3B;" rendered="{!AdvancedFilterCondtionHasError}">
                <strong>Error:&nbsp;</strong>
                <apex:outputText value="{!AdvancedFilterCondtionErrorMessage}" />
            </apex:outputPanel>
        </apex:outputPanel>
        <br/>
    </apex:outputPanel>
    -->
    
                    
</apex:component>